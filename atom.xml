<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Aiyanxu]]></title>
  <link href="http://qingyan1990.github.io/atom.xml" rel="self"/>
  <link href="http://qingyan1990.github.io/"/>
  <updated>2017-03-24T15:11:25+08:00</updated>
  <id>http://qingyan1990.github.io/</id>
  <author>
    <name><![CDATA[qingyan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vue Directives]]></title>
    <link href="http://qingyan1990.github.io/blog/2017/03/24/vue-directives/"/>
    <updated>2017-03-24T14:52:46+08:00</updated>
    <id>http://qingyan1990.github.io/blog/2017/03/24/vue-directives</id>
    <content type="html"><![CDATA[<p><code>v-text</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;span</span> <span class="na">v-text=</span><span class="s">&quot;msg&quot;</span><span class="nt">&gt;&lt;/span&gt;</span>
</span><span class='line'><span class="c">&lt;!-- 和下面的一样 --&gt;</span>
</span><span class='line'><span class="nt">&lt;span&gt;</span><span class="nt">&lt;/span&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>v-html</code> 更新元素的innerHTML</p>

<p><code>v-show</code> 根据表达式之真假值，切换元素的 display CSS 属性。</p>

<p><code>v-if</code> 根据表达式的值的真假条件渲染元素。在切换时元素及它的数据绑定 / 组件被销毁并重建。如果元素是<code>&lt;template&gt;</code>，将提出它的内容作为条件块。</p>

<p><code>v-else</code> <code>v-else-if</code></p>

<p><code>v-for</code></p>

<p><code>v-on</code></p>

<p><code>v-bind</code></p>

<p><code>v-model</code></p>

<p><code>v-pre</code> 跳过这个元素和它的子元素的编译过程。可以用来显示原始 Mustache 标签。跳过大量没有指令的节点会加快编译。</p>

<p><code>v-cloak</code></p>

<p><code>v-once</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vue Instance Life Cycle]]></title>
    <link href="http://qingyan1990.github.io/blog/2017/03/23/vue-instance-life-cycle/"/>
    <updated>2017-03-23T13:30:27+08:00</updated>
    <id>http://qingyan1990.github.io/blog/2017/03/23/vue-instance-life-cycle</id>
    <content type="html"><![CDATA[<p>Vue的生命周期钩子有:<br/>
1. <code>beforeCreate</code><br/>
2. <code>created</code><br/>
3. <code>beforeMount</code><br/>
4. <code>mounted</code><br/>
5. <code>beforeUpdate</code><br/>
6. <code>updated</code><br/>
7. <code>beforeDestroy</code><br/>
8. <code>destroyed</code><br/>
9. <code>activated</code><br/>
10. <code>deactivated</code></p>

<p><img src="https://cn.vuejs.org/images/lifecycle.png" alt="Vue实例生命周期" /></p>

<p><code>activated</code>: keep-alive 组件激活时调用,在服务器端渲染期间不被调用。 <br/>
<code>deactivated</code>: keep-alive 组件停用时调用,在服务器端渲染期间不被调用。</p>
]]></content>
  </entry>
  
</feed>
